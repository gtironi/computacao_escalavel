// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: extractor.proto

#ifndef PROTOBUF_INCLUDED_extractor_2eproto
#define PROTOBUF_INCLUDED_extractor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_extractor_2eproto 

namespace protobuf_extractor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_extractor_2eproto
namespace extractor {
class AllDataResponse;
class AllDataResponseDefaultTypeInternal;
extern AllDataResponseDefaultTypeInternal _AllDataResponse_default_instance_;
class AllDataSend;
class AllDataSendDefaultTypeInternal;
extern AllDataSendDefaultTypeInternal _AllDataSend_default_instance_;
class FlightRow;
class FlightRowDefaultTypeInternal;
extern FlightRowDefaultTypeInternal _FlightRow_default_instance_;
class PesquisaRow;
class PesquisaRowDefaultTypeInternal;
extern PesquisaRowDefaultTypeInternal _PesquisaRow_default_instance_;
class ReservaRow;
class ReservaRowDefaultTypeInternal;
extern ReservaRowDefaultTypeInternal _ReservaRow_default_instance_;
}  // namespace extractor
namespace google {
namespace protobuf {
template<> ::extractor::AllDataResponse* Arena::CreateMaybeMessage<::extractor::AllDataResponse>(Arena*);
template<> ::extractor::AllDataSend* Arena::CreateMaybeMessage<::extractor::AllDataSend>(Arena*);
template<> ::extractor::FlightRow* Arena::CreateMaybeMessage<::extractor::FlightRow>(Arena*);
template<> ::extractor::PesquisaRow* Arena::CreateMaybeMessage<::extractor::PesquisaRow>(Arena*);
template<> ::extractor::ReservaRow* Arena::CreateMaybeMessage<::extractor::ReservaRow>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace extractor {

// ===================================================================

class FlightRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:extractor.FlightRow) */ {
 public:
  FlightRow();
  virtual ~FlightRow();

  FlightRow(const FlightRow& from);

  inline FlightRow& operator=(const FlightRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlightRow(FlightRow&& from) noexcept
    : FlightRow() {
    *this = ::std::move(from);
  }

  inline FlightRow& operator=(FlightRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FlightRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlightRow* internal_default_instance() {
    return reinterpret_cast<const FlightRow*>(
               &_FlightRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FlightRow* other);
  friend void swap(FlightRow& a, FlightRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlightRow* New() const final {
    return CreateMaybeMessage<FlightRow>(NULL);
  }

  FlightRow* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlightRow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlightRow& from);
  void MergeFrom(const FlightRow& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlightRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cidade_origem = 1;
  void clear_cidade_origem();
  static const int kCidadeOrigemFieldNumber = 1;
  const ::std::string& cidade_origem() const;
  void set_cidade_origem(const ::std::string& value);
  #if LANG_CXX11
  void set_cidade_origem(::std::string&& value);
  #endif
  void set_cidade_origem(const char* value);
  void set_cidade_origem(const char* value, size_t size);
  ::std::string* mutable_cidade_origem();
  ::std::string* release_cidade_origem();
  void set_allocated_cidade_origem(::std::string* cidade_origem);

  // string cidade_destino = 2;
  void clear_cidade_destino();
  static const int kCidadeDestinoFieldNumber = 2;
  const ::std::string& cidade_destino() const;
  void set_cidade_destino(const ::std::string& value);
  #if LANG_CXX11
  void set_cidade_destino(::std::string&& value);
  #endif
  void set_cidade_destino(const char* value);
  void set_cidade_destino(const char* value, size_t size);
  ::std::string* mutable_cidade_destino();
  ::std::string* release_cidade_destino();
  void set_allocated_cidade_destino(::std::string* cidade_destino);

  // int32 assentos_ocupados = 3;
  void clear_assentos_ocupados();
  static const int kAssentosOcupadosFieldNumber = 3;
  ::google::protobuf::int32 assentos_ocupados() const;
  void set_assentos_ocupados(::google::protobuf::int32 value);

  // int32 assentos_totais = 4;
  void clear_assentos_totais();
  static const int kAssentosTotaisFieldNumber = 4;
  ::google::protobuf::int32 assentos_totais() const;
  void set_assentos_totais(::google::protobuf::int32 value);

  // int32 assentos_disponiveis = 5;
  void clear_assentos_disponiveis();
  static const int kAssentosDisponiveisFieldNumber = 5;
  ::google::protobuf::int32 assentos_disponiveis() const;
  void set_assentos_disponiveis(::google::protobuf::int32 value);

  // int32 dia = 6;
  void clear_dia();
  static const int kDiaFieldNumber = 6;
  ::google::protobuf::int32 dia() const;
  void set_dia(::google::protobuf::int32 value);

  // int32 mes = 7;
  void clear_mes();
  static const int kMesFieldNumber = 7;
  ::google::protobuf::int32 mes() const;
  void set_mes(::google::protobuf::int32 value);

  // int32 ano = 8;
  void clear_ano();
  static const int kAnoFieldNumber = 8;
  ::google::protobuf::int32 ano() const;
  void set_ano(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:extractor.FlightRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cidade_origem_;
  ::google::protobuf::internal::ArenaStringPtr cidade_destino_;
  ::google::protobuf::int32 assentos_ocupados_;
  ::google::protobuf::int32 assentos_totais_;
  ::google::protobuf::int32 assentos_disponiveis_;
  ::google::protobuf::int32 dia_;
  ::google::protobuf::int32 mes_;
  ::google::protobuf::int32 ano_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_extractor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReservaRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:extractor.ReservaRow) */ {
 public:
  ReservaRow();
  virtual ~ReservaRow();

  ReservaRow(const ReservaRow& from);

  inline ReservaRow& operator=(const ReservaRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReservaRow(ReservaRow&& from) noexcept
    : ReservaRow() {
    *this = ::std::move(from);
  }

  inline ReservaRow& operator=(ReservaRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReservaRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReservaRow* internal_default_instance() {
    return reinterpret_cast<const ReservaRow*>(
               &_ReservaRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ReservaRow* other);
  friend void swap(ReservaRow& a, ReservaRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReservaRow* New() const final {
    return CreateMaybeMessage<ReservaRow>(NULL);
  }

  ReservaRow* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReservaRow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReservaRow& from);
  void MergeFrom(const ReservaRow& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReservaRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tipo_quarto = 1;
  void clear_tipo_quarto();
  static const int kTipoQuartoFieldNumber = 1;
  const ::std::string& tipo_quarto() const;
  void set_tipo_quarto(const ::std::string& value);
  #if LANG_CXX11
  void set_tipo_quarto(::std::string&& value);
  #endif
  void set_tipo_quarto(const char* value);
  void set_tipo_quarto(const char* value, size_t size);
  ::std::string* mutable_tipo_quarto();
  ::std::string* release_tipo_quarto();
  void set_allocated_tipo_quarto(::std::string* tipo_quarto);

  // string nome_hotel = 2;
  void clear_nome_hotel();
  static const int kNomeHotelFieldNumber = 2;
  const ::std::string& nome_hotel() const;
  void set_nome_hotel(const ::std::string& value);
  #if LANG_CXX11
  void set_nome_hotel(::std::string&& value);
  #endif
  void set_nome_hotel(const char* value);
  void set_nome_hotel(const char* value, size_t size);
  ::std::string* mutable_nome_hotel();
  ::std::string* release_nome_hotel();
  void set_allocated_nome_hotel(::std::string* nome_hotel);

  // string cidade_destino = 3;
  void clear_cidade_destino();
  static const int kCidadeDestinoFieldNumber = 3;
  const ::std::string& cidade_destino() const;
  void set_cidade_destino(const ::std::string& value);
  #if LANG_CXX11
  void set_cidade_destino(::std::string&& value);
  #endif
  void set_cidade_destino(const char* value);
  void set_cidade_destino(const char* value, size_t size);
  ::std::string* mutable_cidade_destino();
  ::std::string* release_cidade_destino();
  void set_allocated_cidade_destino(::std::string* cidade_destino);

  // int32 numero_quarto = 4;
  void clear_numero_quarto();
  static const int kNumeroQuartoFieldNumber = 4;
  ::google::protobuf::int32 numero_quarto() const;
  void set_numero_quarto(::google::protobuf::int32 value);

  // int32 quantidade_pessoas = 5;
  void clear_quantidade_pessoas();
  static const int kQuantidadePessoasFieldNumber = 5;
  ::google::protobuf::int32 quantidade_pessoas() const;
  void set_quantidade_pessoas(::google::protobuf::int32 value);

  // float preco = 6;
  void clear_preco();
  static const int kPrecoFieldNumber = 6;
  float preco() const;
  void set_preco(float value);

  // bool ocupado = 7;
  void clear_ocupado();
  static const int kOcupadoFieldNumber = 7;
  bool ocupado() const;
  void set_ocupado(bool value);

  // int32 data_ida_dia = 8;
  void clear_data_ida_dia();
  static const int kDataIdaDiaFieldNumber = 8;
  ::google::protobuf::int32 data_ida_dia() const;
  void set_data_ida_dia(::google::protobuf::int32 value);

  // int32 data_ida_mes = 9;
  void clear_data_ida_mes();
  static const int kDataIdaMesFieldNumber = 9;
  ::google::protobuf::int32 data_ida_mes() const;
  void set_data_ida_mes(::google::protobuf::int32 value);

  // int32 data_ida_ano = 10;
  void clear_data_ida_ano();
  static const int kDataIdaAnoFieldNumber = 10;
  ::google::protobuf::int32 data_ida_ano() const;
  void set_data_ida_ano(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:extractor.ReservaRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tipo_quarto_;
  ::google::protobuf::internal::ArenaStringPtr nome_hotel_;
  ::google::protobuf::internal::ArenaStringPtr cidade_destino_;
  ::google::protobuf::int32 numero_quarto_;
  ::google::protobuf::int32 quantidade_pessoas_;
  float preco_;
  bool ocupado_;
  ::google::protobuf::int32 data_ida_dia_;
  ::google::protobuf::int32 data_ida_mes_;
  ::google::protobuf::int32 data_ida_ano_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_extractor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PesquisaRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:extractor.PesquisaRow) */ {
 public:
  PesquisaRow();
  virtual ~PesquisaRow();

  PesquisaRow(const PesquisaRow& from);

  inline PesquisaRow& operator=(const PesquisaRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PesquisaRow(PesquisaRow&& from) noexcept
    : PesquisaRow() {
    *this = ::std::move(from);
  }

  inline PesquisaRow& operator=(PesquisaRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PesquisaRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PesquisaRow* internal_default_instance() {
    return reinterpret_cast<const PesquisaRow*>(
               &_PesquisaRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PesquisaRow* other);
  friend void swap(PesquisaRow& a, PesquisaRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PesquisaRow* New() const final {
    return CreateMaybeMessage<PesquisaRow>(NULL);
  }

  PesquisaRow* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PesquisaRow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PesquisaRow& from);
  void MergeFrom(const PesquisaRow& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PesquisaRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cidade_origem = 1;
  void clear_cidade_origem();
  static const int kCidadeOrigemFieldNumber = 1;
  const ::std::string& cidade_origem() const;
  void set_cidade_origem(const ::std::string& value);
  #if LANG_CXX11
  void set_cidade_origem(::std::string&& value);
  #endif
  void set_cidade_origem(const char* value);
  void set_cidade_origem(const char* value, size_t size);
  ::std::string* mutable_cidade_origem();
  ::std::string* release_cidade_origem();
  void set_allocated_cidade_origem(::std::string* cidade_origem);

  // string cidade_destino = 2;
  void clear_cidade_destino();
  static const int kCidadeDestinoFieldNumber = 2;
  const ::std::string& cidade_destino() const;
  void set_cidade_destino(const ::std::string& value);
  #if LANG_CXX11
  void set_cidade_destino(::std::string&& value);
  #endif
  void set_cidade_destino(const char* value);
  void set_cidade_destino(const char* value, size_t size);
  ::std::string* mutable_cidade_destino();
  ::std::string* release_cidade_destino();
  void set_allocated_cidade_destino(::std::string* cidade_destino);

  // string nome_hotel = 3;
  void clear_nome_hotel();
  static const int kNomeHotelFieldNumber = 3;
  const ::std::string& nome_hotel() const;
  void set_nome_hotel(const ::std::string& value);
  #if LANG_CXX11
  void set_nome_hotel(::std::string&& value);
  #endif
  void set_nome_hotel(const char* value);
  void set_nome_hotel(const char* value, size_t size);
  ::std::string* mutable_nome_hotel();
  ::std::string* release_nome_hotel();
  void set_allocated_nome_hotel(::std::string* nome_hotel);

  // int32 data_ida_dia = 4;
  void clear_data_ida_dia();
  static const int kDataIdaDiaFieldNumber = 4;
  ::google::protobuf::int32 data_ida_dia() const;
  void set_data_ida_dia(::google::protobuf::int32 value);

  // int32 data_ida_mes = 5;
  void clear_data_ida_mes();
  static const int kDataIdaMesFieldNumber = 5;
  ::google::protobuf::int32 data_ida_mes() const;
  void set_data_ida_mes(::google::protobuf::int32 value);

  // int32 data_ida_ano = 6;
  void clear_data_ida_ano();
  static const int kDataIdaAnoFieldNumber = 6;
  ::google::protobuf::int32 data_ida_ano() const;
  void set_data_ida_ano(::google::protobuf::int32 value);

  // int32 data_volta_dia = 7;
  void clear_data_volta_dia();
  static const int kDataVoltaDiaFieldNumber = 7;
  ::google::protobuf::int32 data_volta_dia() const;
  void set_data_volta_dia(::google::protobuf::int32 value);

  // int32 data_volta_mes = 8;
  void clear_data_volta_mes();
  static const int kDataVoltaMesFieldNumber = 8;
  ::google::protobuf::int32 data_volta_mes() const;
  void set_data_volta_mes(::google::protobuf::int32 value);

  // int32 data_volta_ano = 9;
  void clear_data_volta_ano();
  static const int kDataVoltaAnoFieldNumber = 9;
  ::google::protobuf::int32 data_volta_ano() const;
  void set_data_volta_ano(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:extractor.PesquisaRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cidade_origem_;
  ::google::protobuf::internal::ArenaStringPtr cidade_destino_;
  ::google::protobuf::internal::ArenaStringPtr nome_hotel_;
  ::google::protobuf::int32 data_ida_dia_;
  ::google::protobuf::int32 data_ida_mes_;
  ::google::protobuf::int32 data_ida_ano_;
  ::google::protobuf::int32 data_volta_dia_;
  ::google::protobuf::int32 data_volta_mes_;
  ::google::protobuf::int32 data_volta_ano_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_extractor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllDataSend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:extractor.AllDataSend) */ {
 public:
  AllDataSend();
  virtual ~AllDataSend();

  AllDataSend(const AllDataSend& from);

  inline AllDataSend& operator=(const AllDataSend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllDataSend(AllDataSend&& from) noexcept
    : AllDataSend() {
    *this = ::std::move(from);
  }

  inline AllDataSend& operator=(AllDataSend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllDataSend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllDataSend* internal_default_instance() {
    return reinterpret_cast<const AllDataSend*>(
               &_AllDataSend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AllDataSend* other);
  friend void swap(AllDataSend& a, AllDataSend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllDataSend* New() const final {
    return CreateMaybeMessage<AllDataSend>(NULL);
  }

  AllDataSend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllDataSend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllDataSend& from);
  void MergeFrom(const AllDataSend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllDataSend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string voos = 1;
  void clear_voos();
  static const int kVoosFieldNumber = 1;
  const ::std::string& voos() const;
  void set_voos(const ::std::string& value);
  #if LANG_CXX11
  void set_voos(::std::string&& value);
  #endif
  void set_voos(const char* value);
  void set_voos(const char* value, size_t size);
  ::std::string* mutable_voos();
  ::std::string* release_voos();
  void set_allocated_voos(::std::string* voos);

  // string reservas = 2;
  void clear_reservas();
  static const int kReservasFieldNumber = 2;
  const ::std::string& reservas() const;
  void set_reservas(const ::std::string& value);
  #if LANG_CXX11
  void set_reservas(::std::string&& value);
  #endif
  void set_reservas(const char* value);
  void set_reservas(const char* value, size_t size);
  ::std::string* mutable_reservas();
  ::std::string* release_reservas();
  void set_allocated_reservas(::std::string* reservas);

  // string pesquisas = 3;
  void clear_pesquisas();
  static const int kPesquisasFieldNumber = 3;
  const ::std::string& pesquisas() const;
  void set_pesquisas(const ::std::string& value);
  #if LANG_CXX11
  void set_pesquisas(::std::string&& value);
  #endif
  void set_pesquisas(const char* value);
  void set_pesquisas(const char* value, size_t size);
  ::std::string* mutable_pesquisas();
  ::std::string* release_pesquisas();
  void set_allocated_pesquisas(::std::string* pesquisas);

  // @@protoc_insertion_point(class_scope:extractor.AllDataSend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr voos_;
  ::google::protobuf::internal::ArenaStringPtr reservas_;
  ::google::protobuf::internal::ArenaStringPtr pesquisas_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_extractor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllDataResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:extractor.AllDataResponse) */ {
 public:
  AllDataResponse();
  virtual ~AllDataResponse();

  AllDataResponse(const AllDataResponse& from);

  inline AllDataResponse& operator=(const AllDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllDataResponse(AllDataResponse&& from) noexcept
    : AllDataResponse() {
    *this = ::std::move(from);
  }

  inline AllDataResponse& operator=(AllDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllDataResponse* internal_default_instance() {
    return reinterpret_cast<const AllDataResponse*>(
               &_AllDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AllDataResponse* other);
  friend void swap(AllDataResponse& a, AllDataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllDataResponse* New() const final {
    return CreateMaybeMessage<AllDataResponse>(NULL);
  }

  AllDataResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllDataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllDataResponse& from);
  void MergeFrom(const AllDataResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 stats1 = 1;
  void clear_stats1();
  static const int kStats1FieldNumber = 1;
  ::google::protobuf::int32 stats1() const;
  void set_stats1(::google::protobuf::int32 value);

  // int32 stats2 = 2;
  void clear_stats2();
  static const int kStats2FieldNumber = 2;
  ::google::protobuf::int32 stats2() const;
  void set_stats2(::google::protobuf::int32 value);

  // int32 stats3 = 3;
  void clear_stats3();
  static const int kStats3FieldNumber = 3;
  ::google::protobuf::int32 stats3() const;
  void set_stats3(::google::protobuf::int32 value);

  // int32 stats4 = 4;
  void clear_stats4();
  static const int kStats4FieldNumber = 4;
  ::google::protobuf::int32 stats4() const;
  void set_stats4(::google::protobuf::int32 value);

  // int32 stats5 = 5;
  void clear_stats5();
  static const int kStats5FieldNumber = 5;
  ::google::protobuf::int32 stats5() const;
  void set_stats5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:extractor.AllDataResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 stats1_;
  ::google::protobuf::int32 stats2_;
  ::google::protobuf::int32 stats3_;
  ::google::protobuf::int32 stats4_;
  ::google::protobuf::int32 stats5_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_extractor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FlightRow

// string cidade_origem = 1;
inline void FlightRow::clear_cidade_origem() {
  cidade_origem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlightRow::cidade_origem() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.cidade_origem)
  return cidade_origem_.GetNoArena();
}
inline void FlightRow::set_cidade_origem(const ::std::string& value) {
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.FlightRow.cidade_origem)
}
#if LANG_CXX11
inline void FlightRow::set_cidade_origem(::std::string&& value) {
  
  cidade_origem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.FlightRow.cidade_origem)
}
#endif
inline void FlightRow::set_cidade_origem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.FlightRow.cidade_origem)
}
inline void FlightRow::set_cidade_origem(const char* value, size_t size) {
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.FlightRow.cidade_origem)
}
inline ::std::string* FlightRow::mutable_cidade_origem() {
  
  // @@protoc_insertion_point(field_mutable:extractor.FlightRow.cidade_origem)
  return cidade_origem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlightRow::release_cidade_origem() {
  // @@protoc_insertion_point(field_release:extractor.FlightRow.cidade_origem)
  
  return cidade_origem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlightRow::set_allocated_cidade_origem(::std::string* cidade_origem) {
  if (cidade_origem != NULL) {
    
  } else {
    
  }
  cidade_origem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cidade_origem);
  // @@protoc_insertion_point(field_set_allocated:extractor.FlightRow.cidade_origem)
}

// string cidade_destino = 2;
inline void FlightRow::clear_cidade_destino() {
  cidade_destino_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlightRow::cidade_destino() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.cidade_destino)
  return cidade_destino_.GetNoArena();
}
inline void FlightRow::set_cidade_destino(const ::std::string& value) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.FlightRow.cidade_destino)
}
#if LANG_CXX11
inline void FlightRow::set_cidade_destino(::std::string&& value) {
  
  cidade_destino_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.FlightRow.cidade_destino)
}
#endif
inline void FlightRow::set_cidade_destino(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.FlightRow.cidade_destino)
}
inline void FlightRow::set_cidade_destino(const char* value, size_t size) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.FlightRow.cidade_destino)
}
inline ::std::string* FlightRow::mutable_cidade_destino() {
  
  // @@protoc_insertion_point(field_mutable:extractor.FlightRow.cidade_destino)
  return cidade_destino_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlightRow::release_cidade_destino() {
  // @@protoc_insertion_point(field_release:extractor.FlightRow.cidade_destino)
  
  return cidade_destino_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlightRow::set_allocated_cidade_destino(::std::string* cidade_destino) {
  if (cidade_destino != NULL) {
    
  } else {
    
  }
  cidade_destino_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cidade_destino);
  // @@protoc_insertion_point(field_set_allocated:extractor.FlightRow.cidade_destino)
}

// int32 assentos_ocupados = 3;
inline void FlightRow::clear_assentos_ocupados() {
  assentos_ocupados_ = 0;
}
inline ::google::protobuf::int32 FlightRow::assentos_ocupados() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.assentos_ocupados)
  return assentos_ocupados_;
}
inline void FlightRow::set_assentos_ocupados(::google::protobuf::int32 value) {
  
  assentos_ocupados_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.assentos_ocupados)
}

// int32 assentos_totais = 4;
inline void FlightRow::clear_assentos_totais() {
  assentos_totais_ = 0;
}
inline ::google::protobuf::int32 FlightRow::assentos_totais() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.assentos_totais)
  return assentos_totais_;
}
inline void FlightRow::set_assentos_totais(::google::protobuf::int32 value) {
  
  assentos_totais_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.assentos_totais)
}

// int32 assentos_disponiveis = 5;
inline void FlightRow::clear_assentos_disponiveis() {
  assentos_disponiveis_ = 0;
}
inline ::google::protobuf::int32 FlightRow::assentos_disponiveis() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.assentos_disponiveis)
  return assentos_disponiveis_;
}
inline void FlightRow::set_assentos_disponiveis(::google::protobuf::int32 value) {
  
  assentos_disponiveis_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.assentos_disponiveis)
}

// int32 dia = 6;
inline void FlightRow::clear_dia() {
  dia_ = 0;
}
inline ::google::protobuf::int32 FlightRow::dia() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.dia)
  return dia_;
}
inline void FlightRow::set_dia(::google::protobuf::int32 value) {
  
  dia_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.dia)
}

// int32 mes = 7;
inline void FlightRow::clear_mes() {
  mes_ = 0;
}
inline ::google::protobuf::int32 FlightRow::mes() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.mes)
  return mes_;
}
inline void FlightRow::set_mes(::google::protobuf::int32 value) {
  
  mes_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.mes)
}

// int32 ano = 8;
inline void FlightRow::clear_ano() {
  ano_ = 0;
}
inline ::google::protobuf::int32 FlightRow::ano() const {
  // @@protoc_insertion_point(field_get:extractor.FlightRow.ano)
  return ano_;
}
inline void FlightRow::set_ano(::google::protobuf::int32 value) {
  
  ano_ = value;
  // @@protoc_insertion_point(field_set:extractor.FlightRow.ano)
}

// -------------------------------------------------------------------

// ReservaRow

// string tipo_quarto = 1;
inline void ReservaRow::clear_tipo_quarto() {
  tipo_quarto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReservaRow::tipo_quarto() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.tipo_quarto)
  return tipo_quarto_.GetNoArena();
}
inline void ReservaRow::set_tipo_quarto(const ::std::string& value) {
  
  tipo_quarto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.tipo_quarto)
}
#if LANG_CXX11
inline void ReservaRow::set_tipo_quarto(::std::string&& value) {
  
  tipo_quarto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.ReservaRow.tipo_quarto)
}
#endif
inline void ReservaRow::set_tipo_quarto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tipo_quarto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.ReservaRow.tipo_quarto)
}
inline void ReservaRow::set_tipo_quarto(const char* value, size_t size) {
  
  tipo_quarto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.ReservaRow.tipo_quarto)
}
inline ::std::string* ReservaRow::mutable_tipo_quarto() {
  
  // @@protoc_insertion_point(field_mutable:extractor.ReservaRow.tipo_quarto)
  return tipo_quarto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReservaRow::release_tipo_quarto() {
  // @@protoc_insertion_point(field_release:extractor.ReservaRow.tipo_quarto)
  
  return tipo_quarto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReservaRow::set_allocated_tipo_quarto(::std::string* tipo_quarto) {
  if (tipo_quarto != NULL) {
    
  } else {
    
  }
  tipo_quarto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tipo_quarto);
  // @@protoc_insertion_point(field_set_allocated:extractor.ReservaRow.tipo_quarto)
}

// string nome_hotel = 2;
inline void ReservaRow::clear_nome_hotel() {
  nome_hotel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReservaRow::nome_hotel() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.nome_hotel)
  return nome_hotel_.GetNoArena();
}
inline void ReservaRow::set_nome_hotel(const ::std::string& value) {
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.nome_hotel)
}
#if LANG_CXX11
inline void ReservaRow::set_nome_hotel(::std::string&& value) {
  
  nome_hotel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.ReservaRow.nome_hotel)
}
#endif
inline void ReservaRow::set_nome_hotel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.ReservaRow.nome_hotel)
}
inline void ReservaRow::set_nome_hotel(const char* value, size_t size) {
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.ReservaRow.nome_hotel)
}
inline ::std::string* ReservaRow::mutable_nome_hotel() {
  
  // @@protoc_insertion_point(field_mutable:extractor.ReservaRow.nome_hotel)
  return nome_hotel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReservaRow::release_nome_hotel() {
  // @@protoc_insertion_point(field_release:extractor.ReservaRow.nome_hotel)
  
  return nome_hotel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReservaRow::set_allocated_nome_hotel(::std::string* nome_hotel) {
  if (nome_hotel != NULL) {
    
  } else {
    
  }
  nome_hotel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nome_hotel);
  // @@protoc_insertion_point(field_set_allocated:extractor.ReservaRow.nome_hotel)
}

// string cidade_destino = 3;
inline void ReservaRow::clear_cidade_destino() {
  cidade_destino_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReservaRow::cidade_destino() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.cidade_destino)
  return cidade_destino_.GetNoArena();
}
inline void ReservaRow::set_cidade_destino(const ::std::string& value) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.cidade_destino)
}
#if LANG_CXX11
inline void ReservaRow::set_cidade_destino(::std::string&& value) {
  
  cidade_destino_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.ReservaRow.cidade_destino)
}
#endif
inline void ReservaRow::set_cidade_destino(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.ReservaRow.cidade_destino)
}
inline void ReservaRow::set_cidade_destino(const char* value, size_t size) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.ReservaRow.cidade_destino)
}
inline ::std::string* ReservaRow::mutable_cidade_destino() {
  
  // @@protoc_insertion_point(field_mutable:extractor.ReservaRow.cidade_destino)
  return cidade_destino_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReservaRow::release_cidade_destino() {
  // @@protoc_insertion_point(field_release:extractor.ReservaRow.cidade_destino)
  
  return cidade_destino_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReservaRow::set_allocated_cidade_destino(::std::string* cidade_destino) {
  if (cidade_destino != NULL) {
    
  } else {
    
  }
  cidade_destino_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cidade_destino);
  // @@protoc_insertion_point(field_set_allocated:extractor.ReservaRow.cidade_destino)
}

// int32 numero_quarto = 4;
inline void ReservaRow::clear_numero_quarto() {
  numero_quarto_ = 0;
}
inline ::google::protobuf::int32 ReservaRow::numero_quarto() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.numero_quarto)
  return numero_quarto_;
}
inline void ReservaRow::set_numero_quarto(::google::protobuf::int32 value) {
  
  numero_quarto_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.numero_quarto)
}

// int32 quantidade_pessoas = 5;
inline void ReservaRow::clear_quantidade_pessoas() {
  quantidade_pessoas_ = 0;
}
inline ::google::protobuf::int32 ReservaRow::quantidade_pessoas() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.quantidade_pessoas)
  return quantidade_pessoas_;
}
inline void ReservaRow::set_quantidade_pessoas(::google::protobuf::int32 value) {
  
  quantidade_pessoas_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.quantidade_pessoas)
}

// float preco = 6;
inline void ReservaRow::clear_preco() {
  preco_ = 0;
}
inline float ReservaRow::preco() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.preco)
  return preco_;
}
inline void ReservaRow::set_preco(float value) {
  
  preco_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.preco)
}

// bool ocupado = 7;
inline void ReservaRow::clear_ocupado() {
  ocupado_ = false;
}
inline bool ReservaRow::ocupado() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.ocupado)
  return ocupado_;
}
inline void ReservaRow::set_ocupado(bool value) {
  
  ocupado_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.ocupado)
}

// int32 data_ida_dia = 8;
inline void ReservaRow::clear_data_ida_dia() {
  data_ida_dia_ = 0;
}
inline ::google::protobuf::int32 ReservaRow::data_ida_dia() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.data_ida_dia)
  return data_ida_dia_;
}
inline void ReservaRow::set_data_ida_dia(::google::protobuf::int32 value) {
  
  data_ida_dia_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.data_ida_dia)
}

// int32 data_ida_mes = 9;
inline void ReservaRow::clear_data_ida_mes() {
  data_ida_mes_ = 0;
}
inline ::google::protobuf::int32 ReservaRow::data_ida_mes() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.data_ida_mes)
  return data_ida_mes_;
}
inline void ReservaRow::set_data_ida_mes(::google::protobuf::int32 value) {
  
  data_ida_mes_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.data_ida_mes)
}

// int32 data_ida_ano = 10;
inline void ReservaRow::clear_data_ida_ano() {
  data_ida_ano_ = 0;
}
inline ::google::protobuf::int32 ReservaRow::data_ida_ano() const {
  // @@protoc_insertion_point(field_get:extractor.ReservaRow.data_ida_ano)
  return data_ida_ano_;
}
inline void ReservaRow::set_data_ida_ano(::google::protobuf::int32 value) {
  
  data_ida_ano_ = value;
  // @@protoc_insertion_point(field_set:extractor.ReservaRow.data_ida_ano)
}

// -------------------------------------------------------------------

// PesquisaRow

// string cidade_origem = 1;
inline void PesquisaRow::clear_cidade_origem() {
  cidade_origem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PesquisaRow::cidade_origem() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.cidade_origem)
  return cidade_origem_.GetNoArena();
}
inline void PesquisaRow::set_cidade_origem(const ::std::string& value) {
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.cidade_origem)
}
#if LANG_CXX11
inline void PesquisaRow::set_cidade_origem(::std::string&& value) {
  
  cidade_origem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.PesquisaRow.cidade_origem)
}
#endif
inline void PesquisaRow::set_cidade_origem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.PesquisaRow.cidade_origem)
}
inline void PesquisaRow::set_cidade_origem(const char* value, size_t size) {
  
  cidade_origem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.PesquisaRow.cidade_origem)
}
inline ::std::string* PesquisaRow::mutable_cidade_origem() {
  
  // @@protoc_insertion_point(field_mutable:extractor.PesquisaRow.cidade_origem)
  return cidade_origem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PesquisaRow::release_cidade_origem() {
  // @@protoc_insertion_point(field_release:extractor.PesquisaRow.cidade_origem)
  
  return cidade_origem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PesquisaRow::set_allocated_cidade_origem(::std::string* cidade_origem) {
  if (cidade_origem != NULL) {
    
  } else {
    
  }
  cidade_origem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cidade_origem);
  // @@protoc_insertion_point(field_set_allocated:extractor.PesquisaRow.cidade_origem)
}

// string cidade_destino = 2;
inline void PesquisaRow::clear_cidade_destino() {
  cidade_destino_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PesquisaRow::cidade_destino() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.cidade_destino)
  return cidade_destino_.GetNoArena();
}
inline void PesquisaRow::set_cidade_destino(const ::std::string& value) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.cidade_destino)
}
#if LANG_CXX11
inline void PesquisaRow::set_cidade_destino(::std::string&& value) {
  
  cidade_destino_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.PesquisaRow.cidade_destino)
}
#endif
inline void PesquisaRow::set_cidade_destino(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.PesquisaRow.cidade_destino)
}
inline void PesquisaRow::set_cidade_destino(const char* value, size_t size) {
  
  cidade_destino_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.PesquisaRow.cidade_destino)
}
inline ::std::string* PesquisaRow::mutable_cidade_destino() {
  
  // @@protoc_insertion_point(field_mutable:extractor.PesquisaRow.cidade_destino)
  return cidade_destino_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PesquisaRow::release_cidade_destino() {
  // @@protoc_insertion_point(field_release:extractor.PesquisaRow.cidade_destino)
  
  return cidade_destino_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PesquisaRow::set_allocated_cidade_destino(::std::string* cidade_destino) {
  if (cidade_destino != NULL) {
    
  } else {
    
  }
  cidade_destino_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cidade_destino);
  // @@protoc_insertion_point(field_set_allocated:extractor.PesquisaRow.cidade_destino)
}

// string nome_hotel = 3;
inline void PesquisaRow::clear_nome_hotel() {
  nome_hotel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PesquisaRow::nome_hotel() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.nome_hotel)
  return nome_hotel_.GetNoArena();
}
inline void PesquisaRow::set_nome_hotel(const ::std::string& value) {
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.nome_hotel)
}
#if LANG_CXX11
inline void PesquisaRow::set_nome_hotel(::std::string&& value) {
  
  nome_hotel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.PesquisaRow.nome_hotel)
}
#endif
inline void PesquisaRow::set_nome_hotel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.PesquisaRow.nome_hotel)
}
inline void PesquisaRow::set_nome_hotel(const char* value, size_t size) {
  
  nome_hotel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.PesquisaRow.nome_hotel)
}
inline ::std::string* PesquisaRow::mutable_nome_hotel() {
  
  // @@protoc_insertion_point(field_mutable:extractor.PesquisaRow.nome_hotel)
  return nome_hotel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PesquisaRow::release_nome_hotel() {
  // @@protoc_insertion_point(field_release:extractor.PesquisaRow.nome_hotel)
  
  return nome_hotel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PesquisaRow::set_allocated_nome_hotel(::std::string* nome_hotel) {
  if (nome_hotel != NULL) {
    
  } else {
    
  }
  nome_hotel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nome_hotel);
  // @@protoc_insertion_point(field_set_allocated:extractor.PesquisaRow.nome_hotel)
}

// int32 data_ida_dia = 4;
inline void PesquisaRow::clear_data_ida_dia() {
  data_ida_dia_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_ida_dia() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_ida_dia)
  return data_ida_dia_;
}
inline void PesquisaRow::set_data_ida_dia(::google::protobuf::int32 value) {
  
  data_ida_dia_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_ida_dia)
}

// int32 data_ida_mes = 5;
inline void PesquisaRow::clear_data_ida_mes() {
  data_ida_mes_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_ida_mes() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_ida_mes)
  return data_ida_mes_;
}
inline void PesquisaRow::set_data_ida_mes(::google::protobuf::int32 value) {
  
  data_ida_mes_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_ida_mes)
}

// int32 data_ida_ano = 6;
inline void PesquisaRow::clear_data_ida_ano() {
  data_ida_ano_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_ida_ano() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_ida_ano)
  return data_ida_ano_;
}
inline void PesquisaRow::set_data_ida_ano(::google::protobuf::int32 value) {
  
  data_ida_ano_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_ida_ano)
}

// int32 data_volta_dia = 7;
inline void PesquisaRow::clear_data_volta_dia() {
  data_volta_dia_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_volta_dia() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_volta_dia)
  return data_volta_dia_;
}
inline void PesquisaRow::set_data_volta_dia(::google::protobuf::int32 value) {
  
  data_volta_dia_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_volta_dia)
}

// int32 data_volta_mes = 8;
inline void PesquisaRow::clear_data_volta_mes() {
  data_volta_mes_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_volta_mes() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_volta_mes)
  return data_volta_mes_;
}
inline void PesquisaRow::set_data_volta_mes(::google::protobuf::int32 value) {
  
  data_volta_mes_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_volta_mes)
}

// int32 data_volta_ano = 9;
inline void PesquisaRow::clear_data_volta_ano() {
  data_volta_ano_ = 0;
}
inline ::google::protobuf::int32 PesquisaRow::data_volta_ano() const {
  // @@protoc_insertion_point(field_get:extractor.PesquisaRow.data_volta_ano)
  return data_volta_ano_;
}
inline void PesquisaRow::set_data_volta_ano(::google::protobuf::int32 value) {
  
  data_volta_ano_ = value;
  // @@protoc_insertion_point(field_set:extractor.PesquisaRow.data_volta_ano)
}

// -------------------------------------------------------------------

// AllDataSend

// string voos = 1;
inline void AllDataSend::clear_voos() {
  voos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllDataSend::voos() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataSend.voos)
  return voos_.GetNoArena();
}
inline void AllDataSend::set_voos(const ::std::string& value) {
  
  voos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.AllDataSend.voos)
}
#if LANG_CXX11
inline void AllDataSend::set_voos(::std::string&& value) {
  
  voos_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.AllDataSend.voos)
}
#endif
inline void AllDataSend::set_voos(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  voos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.AllDataSend.voos)
}
inline void AllDataSend::set_voos(const char* value, size_t size) {
  
  voos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.AllDataSend.voos)
}
inline ::std::string* AllDataSend::mutable_voos() {
  
  // @@protoc_insertion_point(field_mutable:extractor.AllDataSend.voos)
  return voos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllDataSend::release_voos() {
  // @@protoc_insertion_point(field_release:extractor.AllDataSend.voos)
  
  return voos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllDataSend::set_allocated_voos(::std::string* voos) {
  if (voos != NULL) {
    
  } else {
    
  }
  voos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voos);
  // @@protoc_insertion_point(field_set_allocated:extractor.AllDataSend.voos)
}

// string reservas = 2;
inline void AllDataSend::clear_reservas() {
  reservas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllDataSend::reservas() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataSend.reservas)
  return reservas_.GetNoArena();
}
inline void AllDataSend::set_reservas(const ::std::string& value) {
  
  reservas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.AllDataSend.reservas)
}
#if LANG_CXX11
inline void AllDataSend::set_reservas(::std::string&& value) {
  
  reservas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.AllDataSend.reservas)
}
#endif
inline void AllDataSend::set_reservas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.AllDataSend.reservas)
}
inline void AllDataSend::set_reservas(const char* value, size_t size) {
  
  reservas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.AllDataSend.reservas)
}
inline ::std::string* AllDataSend::mutable_reservas() {
  
  // @@protoc_insertion_point(field_mutable:extractor.AllDataSend.reservas)
  return reservas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllDataSend::release_reservas() {
  // @@protoc_insertion_point(field_release:extractor.AllDataSend.reservas)
  
  return reservas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllDataSend::set_allocated_reservas(::std::string* reservas) {
  if (reservas != NULL) {
    
  } else {
    
  }
  reservas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservas);
  // @@protoc_insertion_point(field_set_allocated:extractor.AllDataSend.reservas)
}

// string pesquisas = 3;
inline void AllDataSend::clear_pesquisas() {
  pesquisas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllDataSend::pesquisas() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataSend.pesquisas)
  return pesquisas_.GetNoArena();
}
inline void AllDataSend::set_pesquisas(const ::std::string& value) {
  
  pesquisas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:extractor.AllDataSend.pesquisas)
}
#if LANG_CXX11
inline void AllDataSend::set_pesquisas(::std::string&& value) {
  
  pesquisas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:extractor.AllDataSend.pesquisas)
}
#endif
inline void AllDataSend::set_pesquisas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pesquisas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:extractor.AllDataSend.pesquisas)
}
inline void AllDataSend::set_pesquisas(const char* value, size_t size) {
  
  pesquisas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:extractor.AllDataSend.pesquisas)
}
inline ::std::string* AllDataSend::mutable_pesquisas() {
  
  // @@protoc_insertion_point(field_mutable:extractor.AllDataSend.pesquisas)
  return pesquisas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllDataSend::release_pesquisas() {
  // @@protoc_insertion_point(field_release:extractor.AllDataSend.pesquisas)
  
  return pesquisas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllDataSend::set_allocated_pesquisas(::std::string* pesquisas) {
  if (pesquisas != NULL) {
    
  } else {
    
  }
  pesquisas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pesquisas);
  // @@protoc_insertion_point(field_set_allocated:extractor.AllDataSend.pesquisas)
}

// -------------------------------------------------------------------

// AllDataResponse

// int32 stats1 = 1;
inline void AllDataResponse::clear_stats1() {
  stats1_ = 0;
}
inline ::google::protobuf::int32 AllDataResponse::stats1() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataResponse.stats1)
  return stats1_;
}
inline void AllDataResponse::set_stats1(::google::protobuf::int32 value) {
  
  stats1_ = value;
  // @@protoc_insertion_point(field_set:extractor.AllDataResponse.stats1)
}

// int32 stats2 = 2;
inline void AllDataResponse::clear_stats2() {
  stats2_ = 0;
}
inline ::google::protobuf::int32 AllDataResponse::stats2() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataResponse.stats2)
  return stats2_;
}
inline void AllDataResponse::set_stats2(::google::protobuf::int32 value) {
  
  stats2_ = value;
  // @@protoc_insertion_point(field_set:extractor.AllDataResponse.stats2)
}

// int32 stats3 = 3;
inline void AllDataResponse::clear_stats3() {
  stats3_ = 0;
}
inline ::google::protobuf::int32 AllDataResponse::stats3() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataResponse.stats3)
  return stats3_;
}
inline void AllDataResponse::set_stats3(::google::protobuf::int32 value) {
  
  stats3_ = value;
  // @@protoc_insertion_point(field_set:extractor.AllDataResponse.stats3)
}

// int32 stats4 = 4;
inline void AllDataResponse::clear_stats4() {
  stats4_ = 0;
}
inline ::google::protobuf::int32 AllDataResponse::stats4() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataResponse.stats4)
  return stats4_;
}
inline void AllDataResponse::set_stats4(::google::protobuf::int32 value) {
  
  stats4_ = value;
  // @@protoc_insertion_point(field_set:extractor.AllDataResponse.stats4)
}

// int32 stats5 = 5;
inline void AllDataResponse::clear_stats5() {
  stats5_ = 0;
}
inline ::google::protobuf::int32 AllDataResponse::stats5() const {
  // @@protoc_insertion_point(field_get:extractor.AllDataResponse.stats5)
  return stats5_;
}
inline void AllDataResponse::set_stats5(::google::protobuf::int32 value) {
  
  stats5_ = value;
  // @@protoc_insertion_point(field_set:extractor.AllDataResponse.stats5)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace extractor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_extractor_2eproto
